#!/bin/bash
#============================================================================
# Title: brewfile
# Usage: brewfile [ -c | --clean | clean | -d | --dump | dump | -i | --install | install | -h | --help | help | -s | --save | save | -w | --why | why ]
#
# Description:
# Homebrew Brewfile manager
#============================================================================

while :; do
	case $1 in
	-c | --clean | clean)
		chirp --info "Running bundle clean"
		brew bundle cleanup --force --file "$HOMEBREW_BREWFILE" --describe --taps --brews --casks --mas
		chirp --success "Cleanup complete"
		break
		;;
	-d | --dump | dump)
		chirp --process-title "Dumping Homebrew bundle"
		brew bundle dump --force --file="$HOMEBREW_BREWFILE" --describe --taps --brews --casks --mas
		chirp --success "Dump complete -> $HOMEBREW_BREWFILE"
		break
		;;
	-i | --install | install | i)
		chirp --process-title "Installing Homebrew bundle"
		brew bundle --quiet --no-upgrade --file="$HOMEBREW_BREWFILE"
		break
		;;
	-h | --help | help)
		chirp --info "Manage your Homebrew Brewfile"
		echo
		chirp --alt "Options"
		echo
		chirp --option "-c, --clean, clean" "Uninstall any brews that aren't in the brewfile"
		chirp --option "-d, --dump, dump" "Dump added/removed brews"
		chirp --option "-i, --install, install, i" "Install brews from Brewfile"
		chirp --option "-h, --help, help" "Show help"
		chirp --option "-s, --save, save" "Git commit bundle changes"
		chirp --option "-w, --why, why" "List dependencies"
		break
		;;
	-s | --save | save)
		(
			cd "$DOTFILES" || exit
			chirp --success "Your Brewfile is up to date"
			if git diff -s --exit-code "$HOMEBREW_BREWFILE"; then
				git --git-dir="$DOTFILES"/.git add "$HOMEBREW_BREWFILE"
				git --git-dir="$DOTFILES"/.git commit -m "Update Brewfile"
				chirp --success "Bundle changes committed"
			else
				echo "No changes to commit."
			fi
		)
		break
		;;

	-w | --why | why)
		brew list -1 --formula | while read -r cask; do
			echo -ne "\x1B[1;34m $cask \x1B[0m"
			brew uses "$cask" --installed | awk '{printf(" %s ", $0)}'
			echo ""
		done
		break
		;;
	*)
		b --help
		break
		;;
	esac
	shift
done
